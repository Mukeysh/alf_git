diff --git a/creativecommons.install b/../../../../Zend/Apache2/htdocs/os/sites/all/modules/contrib/creativecommons/creativecommons.install
index 5c50b9d..30b3615 100644
--- a/creativecommons.install
+++ b/../../../../Zend/Apache2/htdocs/os/sites/all/modules/contrib/creativecommons/creativecommons.install
@@ -23,6 +23,7 @@ function creativecommons_schema() {
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
+        'default' => '',
       ),
       // from http://creativecommons.org/ns
       'attributionName' => array(
@@ -30,18 +31,21 @@ function creativecommons_schema() {
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
+        'default' => '',
       ),
       'attributionURL' => array(
         'description' => 'The URL the creator of a Work would like used when attributing re-use.',
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
+        'default' => '',
       ),
       'morePermissions' => array(
         'description' => 'The URL where additional permissions or alternative licenses for a Work are available.',
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
+        'default' => '',
       ),
       // from http://dublincore.org/documents/dces/
       'title' => array(
@@ -49,12 +53,14 @@ function creativecommons_schema() {
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
+        'default' => '',
       ),
       'type' => array(
         'description' => 'The nature of genre of the work.',
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
+        'default' => '',
       ),
       'description' => array(
         'description' => 'An account of the work.',
@@ -67,24 +73,28 @@ function creativecommons_schema() {
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
+        'default' => '',
       ),
       'rights' => array(
         'description' => "Copyright holder's name.",
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
+        'default' => '',
       ),
       'date' => array(
         'description' => 'Year of Copyright.',
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
+        'default' => '',
       ),
       'source' => array(
         'description' => 'Source work URL',
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
+        'default' => '',
       ),
     ),
     'primary key' => array('nid'),
@@ -104,12 +114,14 @@ function creativecommons_schema() {
         'type' => 'varchar',
         'length' => 12,
         'not null' => TRUE,
+        'default' => '',
       ),
       'jurisdiction' => array(
         'description' => 'Creative Commons default license jurisdiction.',
         'type' => 'varchar',
         'length' => 4,
         'not null' => TRUE,
+        'default' => '',
       ),
       // from http://creativecommons.org/ns
       'attributionName' => array(
@@ -117,12 +129,14 @@ function creativecommons_schema() {
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
+        'default' => '',
       ),
       'attributionURL' => array(
         'description' => 'The URL the User would like used when attributing re-use.',
         'type' => 'varchar',
         'length' => 255,
         'not null' => TRUE,
+        'default' => '',
       ),
     ),
     'primary key' => array('uid'),
@@ -260,7 +274,7 @@ function creativecommons_update_4() {
     $renamed_permission = preg_replace('/(?<=^|,\ )attach\ creative\ commons(?=,|$)/', 'attach creative commons, use creative commons user defaults', $role->perm);
     if ($renamed_permission != $role->perm) {
       $ret[] = update_sql("UPDATE {permission} SET perm = '$renamed_permission' WHERE rid = $role->rid");
-    }    
+    }
   }
 
   // Notify user of new permission
@@ -272,11 +286,30 @@ function creativecommons_update_4() {
 function creativecommons_update_5() {
   $cache_creativecommons_api = drupal_get_schema_unprocessed('system', 'cache');
   $cache_creativecommons_api['description'] = 'Cache table for CC API requests.';
-  
+
   db_create_table($ret, 'cache_creativecommons_api', $cache_creativecommons_api);
-  
+
   // Uninstall old cache API variables
   db_query("DELETE FROM {variable} WHERE name LIKE 'creativecommons_api_%'");
-  
+
+  return $ret;
+}
+
+function creativecommons_update_6() {
+  $schema = drupal_get_schema('creativecommons_node');
+  $ret = array();
+  foreach ($schema['fields'] as $field => $data) {
+    if (isset($data['default'])) {
+      db_change_field($ret, 'creativecommons_node', $field, $field, $data);
+    }
+  }
+
+  $schema = drupal_get_schema('creativecommons_user');
+  foreach ($schema['fields'] as $field => $data) {
+    if (isset($data['default'])) {
+      db_change_field($ret, 'creativecommons_user', $field, $field, $data);
+    }
+  }
+
   return $ret;
 }
